.cpu cortex-m0
.thumb
.syntax unified
.fpu softvfp

.text

.global login
login: .string "xyz"
hello_str: .string "Hello, %s!\n"
.balign  2


.global hello
hello:
	push {lr}
	ldr r0, =hello_str
	ldr r1, =login
	bl printf
	pop  {pc}

.global showsub2
showsub2:
	push {lr}
	//r0 is string
	//r1 is a
	//r2 is b
	//r3 is a - b
	movs r3, r1
	movs r1, r0
	movs r2, r3
	ldr r0, =showsub2_str
	subs r3, r1, r2
	bl printf
	pop  {pc}

showsub2_str: .string "%d - %d = %d\n"
.balign  2

.global showsub3
showsub3:
	push {r4, r5, r6, r7, lr}
	movs r4, r0
	movs r5, r1
	movs r6, r2
	movs r1, r4
	movs r2, r5
	movs r3, r6
	ldr r0, =showsub3_str
	movs r4, #0
	subs r4, r1, r2
	subs r4, r3, r4
	push {r4, r5, r6, r7}
	bl printf
	pop {r4, r5, r6, r7}
	pop {r4, r5, r6, r7, pc}


showsub3_str: .string "%d - %d - %d = %d\n"
.balign  2

.global listing
listing:
	push {r4, r5, r6, r7, lr}
	movs r6, r5
	movs r5, r4
	movs r4, r3
	movs r3, r2
	movs r2, r1
	movs r1, r0
	ldr r0, =listing_str
	push {r0, r1, r2, r4, r5, r6}
	bl printf
	pop {r0, r1, r2, r4, r5, r6}
	pop {r4, r5, r6, r7, pc}

listing_str: .string "%s %05d %s %d students in %s, %d\n"
.balign  2

.global trivial
trivial:
	push {lr}

	pop {pc}

.global depth
depth:
	push {r4, r5, lr}
	movs r4, r0 // r4 stores x
	movs r0, r1 // stores s in r0
	push {r4, r5}
	bl strlen // computes strlen with value s in r0
	pop {r4, r5}
	movs r3, r0 // this stores strlen length to r3
	cmp r3, #0
	beq depthdone
	movs r0, r1
	push {r4, r5}
	bl puts
	pop {r4, r5}
	movs r5, r0
	pop {r4, r5, pc}

depthdone:

.global collatz
collatz:
	push {lr}

	pop {pc}

.global permute
permute:
	push {lr}

	pop {pc}

.global bizarre
bizarre:
	push {lr}

	pop {pc}

.global easy
easy:
	push {lr}

	pop {pc}


// Add the rest of your subroutines below
